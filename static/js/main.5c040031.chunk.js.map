{"version":3,"sources":["components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/posts.js","api/api.js","api/comments.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsList","posts","setPost","selectPost","selectUser","filterPosts","filter","post","userId","className","length","map","key","id","title","type","onClick","NewCommentForm","postId","addComment","useState","name","email","body","obj","setValue","defaultState","onChangeValue","e","target","value","method","onSubmit","preventDefault","Object","values","every","input","trim","newComment","placeholder","onChange","required","request","url","options","fetch","then","res","json","data","getPostDetails","postid","getPostComments","removeComment","commentId","headers","JSON","stringify","PostDetails","remove","details","setDetails","comments","setComents","hide","setHide","useEffect","postDetails","comment","App","setPosts","setUser","setDet","postsFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c040031.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\n\nexport const PostsList = ({ posts, setPost, selectPost, selectUser }) => {\n  const filterPosts = posts.filter((post) => {\n    if (!(+selectUser)) {\n      return post;\n    }\n\n    return post.userId === selectUser;\n  });\n\n  return (\n    <div className=\"PostsList\">\n      <h2>{filterPosts.length ? 'Posts:' : 'No Posts'}</h2>\n      <ul className=\"PostsList__list\">\n        {filterPosts.map(post => (\n          <li\n            key={post.id}\n            className=\"PostsList__item\"\n          >\n            <div>\n              <b>{`[User #${post.userId}]:`}</b>\n              {post.title}\n            </div>\n            {selectPost === post.id\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => setPost(0)}\n                >\n                  Close\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => setPost(+post.id)}\n                >\n                  Open\n                </button>\n              )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  setPost: PropTypes.func.isRequired,\n  selectPost: PropTypes.number.isRequired,\n  selectUser: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport PropTypes from 'prop-types';\n\nexport const NewCommentForm = ({ postId, addComment }) => {\n  const [obj, setValue] = useState({\n    name: '',\n    email: '',\n    body: '',\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const inputs = Object.values(obj);\n    const checkOnValid = inputs.every(input => input.trim().length > 2);\n\n    if (checkOnValid) {\n      const newComment = {\n        postId,\n        ...obj,\n      };\n\n      addComment(newComment);\n      defaultState();\n    }\n  };\n\n  const defaultState = () => {\n    setValue({\n      name: '',\n      email: '',\n      body: '',\n    });\n  };\n\n  const onChangeValue = (e) => {\n    const { value, name } = e.target;\n\n    setValue({\n      ...obj,\n      [name]: value,\n    });\n  };\n\n  return (\n    <form\n      method=\"POST\"\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={obj.name}\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          onChange={onChangeValue}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={obj.email}\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          onChange={onChangeValue}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={obj.body}\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          onChange={onChangeValue}\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  addComment: PropTypes.func.isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport const request = (url, options) => (\n  fetch(`${BASE_URL}${url}`, options)\n    .then(res => res.json())\n    .then(json => json.data));\n\nexport const getPosts = () => request('/posts');\nexport const getPostDetails = postid => request(`/posts/${postid}`);\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { request } from './posts';\n\nexport const getPostComments = postId => (\n  request(`/comments?postId=${postId}`)\n);\n\nexport const removeComment = commentId => (\n  request(`/comments/${commentId}`, { method: 'DELETE' })\n);\n\nexport const addComment = ({ postId, name, email, body }) => (\n  request('/comments', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=utf-8',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  })\n);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, addComment } from '../../api/comments';\n\nexport const PostDetails = ({ postId, remove }) => {\n  const [details, setDetails] = useState({});\n  const [comments, setComents] = useState([]);\n  const [hide, setHide] = useState(false);\n\n  useEffect(() => {\n    getPostDetails(postId)\n      .then(postDetails => setDetails(postDetails));\n  }, [postId]);\n\n  useEffect(() => {\n    getPostComments(postId)\n      .then(setComents);\n  });\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      <section className=\"PostDetails__post\">\n        <p>{details.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {comments.length > 0 && (\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => setHide(!hide)}\n        >\n          {`${!hide ? 'Hide' : 'Show'} ${comments.length} comments`}\n        </button>\n        )}\n\n        {!hide && (\n        <ul className=\"PostDetails__list\">\n          {comments.map(comment => (\n            <li\n              key={comment.id}\n              className=\"PostDetails__list-item\"\n            >\n              <button\n                type=\"button\"\n                className=\"PostDetails__remove-button button\"\n                onClick={() => remove(comment.id)}\n              >\n                X\n              </button>\n              <p>{comment.body}</p>\n            </li>\n          ))}\n        </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={postId}\n            addComment={addComment}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n  remove: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nimport { getPostDetails, getPosts } from './api/posts';\nimport { removeComment, getPostComments } from './api/comments';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [selectUser, setUser] = useState(0);\n  const [selectPost, setPost] = useState(0);\n  const [details, setDet] = useState(false);\n  const [comments, setComents] = useState([]);\n\n  useEffect(() => {\n    getPosts()\n      .then(postsFromServer => setPosts(postsFromServer));\n  }, []);\n\n  useEffect(() => {\n    getPostDetails(selectPost)\n      .then(setDet);\n  }, [selectPost]);\n\n  useEffect(() => {\n    getPostComments(selectPost)\n      .then(setComents);\n  }, [selectPost]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={selectUser}\n            onChange={e => setUser(+e.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectPost={selectPost}\n            setPost={setPost}\n            selectUser={selectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {(selectPost > 0 && details) && (\n          <PostDetails\n            postId={selectPost}\n            remove={removeComment}\n            comments={comments}\n          />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}