{"version":3,"sources":["components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/posts.js","api/api.js","api/comments.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsList","posts","setPost","selectPost","selectUser","filterPosts","filter","post","userId","className","length","map","key","id","title","type","onClick","NewCommentForm","postId","addComment","useState","name","email","body","obj","setValue","defaultState","onChangeValue","e","target","value","newComment","method","onSubmit","preventDefault","placeholder","onChange","required","request","url","options","fetch","then","res","json","data","getPostDetails","postid","getPostComments","removeComment","commentId","headers","JSON","stringify","PostDetails","remove","details","setDetails","comments","setComents","hide","setHide","useEffect","postDetails","comment","App","setPosts","setUser","det","setDet","postsFromServer","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a15306fe.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\n\nexport const PostsList = ({ posts, setPost, selectPost, selectUser}) => {\n  const filterPosts = posts.filter(post => {\n    if (!(+selectUser)) {\n      return post;\n    }\n\n    return post.userId === selectUser;\n  })\n\n  return (\n  <div className=\"PostsList\">\n    <h2>{filterPosts.length ? 'Posts:' : 'No Posts'}</h2>\n    <ul className=\"PostsList__list\">\n      {filterPosts.map(post => (\n        <li \n          key={post.id}\n          className=\"PostsList__item\"\n        >\n          <div>\n            <b>{`[User #${post.userId}]:`}</b>\n            {post.title}\n          </div>\n          {selectPost === post.id \n            ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => setPost(0)}\n              >\n                Close\n              </button> \n            ) : (\n              <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => setPost(+post.id)}\n            >\n              Open\n            </button>\n            )}\n        </li>\n      ))}\n      {/* <li className=\"PostsList__item\">\n        <div>\n          <b>[User #1]: </b>\n          sunt aut facere repellat provident occaecati excepturi optio\n        </div>\n        <button\n          type=\"button\"\n          className=\"PostsList__button button\"\n        >\n          Close\n        </button>\n      </li>\n\n      <li className=\"PostsList__item\">\n        <div>\n          <b>[User #2]: </b>\n          et ea vero quia laudantium autem\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"PostsList__button button\"\n        >\n          Open\n        </button>\n      </li> */}\n    </ul>\n  </div>\n)};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId, addComment }) => {\n  const [obj, setValue] = useState({\n    name: '',\n    email: '',\n    body: ''\n    });\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    addComment(newComment)\n    defaultState()\n  }\n\n  const defaultState = () => {\n    setValue({    \n      name: '',\n      email: '',\n      body: ''\n    })\n  }\n\n  const onChangeValue = (e) => {\n    const { value, name } = e.target;\n\n    setValue({\n      ...obj,\n      [name]: value,\n    });\n  };\n\n  const newComment = {\n    postId,\n    ...obj,\n  };\n  \n  return (\n  <form \n    method=\"POST\"\n    className=\"NewCommentForm\"\n    onSubmit={handleSubmit}\n  >\n    \n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={obj.name}\n        placeholder=\"Your name\"\n        className=\"NewCommentForm__input\"\n        onChange={onChangeValue}\n        required\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"email\"\n        value={obj.email}\n        placeholder=\"Your email\"\n        className=\"NewCommentForm__input\"\n        onChange={onChangeValue}\n        required\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <textarea\n        name=\"body\"\n        value={obj.body}\n        placeholder=\"Type comment here\"\n        className=\"NewCommentForm__input\"\n        onChange={onChangeValue}\n        required\n      />\n    </div>\n\n    <button\n      type=\"submit\"\n      className=\"NewCommentForm__submit-button button\"\n    >\n      Add a comment\n    </button>\n  </form>\n)};\n","import { BASE_URL } from './api'\n\nexport const request = (url, options) => (\n  fetch(`${BASE_URL}${url}`, options)\n      .then(res => res.json())\n      .then(json => json.data));\n\nexport const getPosts = () => request('/posts');\nexport const getUserPosts = (userId) => request(`/posts?userId=${userId}`);\nexport const getPostDetails = (postid) => request(`/posts/${postid}`);\n\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { request } from './posts';\n\nexport const getPostComments = (postId) => request(`/comments?postId=${postId}`);\nexport const removeComment = (commentId) => request(`/comments/${commentId}`, { method: 'DELETE' });\nexport const addComment = ({ postId, name, email, body}) => request('/comments', {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=utf-8',\n  },\n  body: JSON.stringify({\n    postId,\n    name,\n    email,\n    body,\n  }),\n});","import React, {useState, useEffect} from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport {  getPostComments, addComment } from '../../api/comments';\n\nexport const PostDetails = ({ postId, remove }) => {\n  const [details, setDetails] = useState({});\n  const [comments, setComents] = useState([]);\n  const [hide, setHide] = useState(false)\n  \n  useEffect(() => {\n    getPostDetails(postId)\n    .then(postDetails => setDetails(postDetails))\n  }, [postId])\n\n  useEffect(() => {\n    getPostComments(postId)\n    .then(comments => setComents(comments))\n  })\n\n  return (\n  <div className=\"PostDetails\">\n    <h2>Post details:</h2>\n    <section className=\"PostDetails__post\">\n      <p>{details.body}</p>\n    </section>\n\n    <section className=\"PostDetails__comments\">\n    {comments.length > 0 && (\n      <button \n        type=\"button\" \n        className=\"button\"\n        onClick={() => setHide(!hide)}\n      >\n        {`${!hide ? 'Hide' : 'Show'} ${comments.length} comments`}\n      </button>)}\n\n      {!hide && (\n      <ul className=\"PostDetails__list\">\n        {comments.map(comment => (\n          <li \n            key={comment.id}\n            className=\"PostDetails__list-item\"\n          >\n            <button \n              type=\"button\"\n              className=\"PostDetails__remove-button button\"\n              onClick={() => remove(comment.id)}\n            >\n              X\n            </button>\n            <p>{comment.body}</p>\n          </li>\n        ))}\n      </ul>)}\n    </section>\n\n    <section>\n      <div className=\"PostDetails__form-wrapper\">\n        <NewCommentForm postId={postId} addComment={addComment}/>\n      </div>\n    </section>\n  </div>\n)};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nimport { getPostDetails, getPosts } from './api/posts';\nimport { removeComment, getPostComments } from './api/comments'\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [selectUser, setUser] = useState(0);\n  const [selectPost, setPost] = useState(0);\n  const [det, setDet] = useState(false);\n  const [comments, setComents] = useState([]);\n\n  useEffect(() => {\n    getPosts()\n    .then(postsFromServer => setPosts(postsFromServer))\n  }, []);\n\n  useEffect(() => {\n    getPostDetails(selectPost)\n    .then(setDet)\n  }, [selectPost])\n\n  useEffect(() => {\n    getPostComments(selectPost)\n    .then(setComents)\n  }, [selectPost])\n\n  console.log(det);\n  return (\n  <div className=\"App\">\n    <header className=\"App__header\">\n      <label>\n        Select a user: &nbsp;\n  \n        <select\n          className=\"App__user-selector\"\n          value={selectUser}\n          onChange={(e) => setUser(+e.target.value)}\n        >\n          <option value=\"0\">All users</option>\n          <option value=\"1\">Leanne Graham</option>\n          <option value=\"2\">Ervin Howell</option>\n          <option value=\"3\">Clementine Bauch</option>\n          <option value=\"4\">Patricia Lebsack</option>\n          <option value=\"5\">Chelsey Dietrich</option>\n          <option value=\"6\">Mrs. Dennis Schulist</option>\n          <option value=\"7\">Kurtis Weissnat</option>\n          <option value=\"8\">Nicholas Runolfsdottir V</option>\n          <option value=\"9\">Glenna Reichert</option>\n          <option value=\"10\">Leanne Graham</option>\n        </select>\n      </label>\n    </header>\n\n    <main className=\"App__main\">\n      <div className=\"App__sidebar\">\n        <PostsList\n          posts={posts}\n          selectPost={selectPost}\n          setPost={setPost}\n          selectUser={selectUser}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        {(selectPost > 0 && det) && (\n        <PostDetails \n          postId={selectPost}\n          remove={removeComment}\n          comments={comments}\n        />\n        )}\n      </div>\n    </main>\n  </div>\n)};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}